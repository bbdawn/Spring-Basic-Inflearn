1-객체지향설계와스프링
2-스프링핵심원리이해1-예제만들기
3-스프링핵심원리이해2-객체지향원리적용
4-스프링컨테이너와스프링빈
5-싱글톤컨테이너
6-컴포넌트스캔
7-의존관계자동주입
8-빈생명주기콜백
9-빈스코프
-----------------------------
**이야기-자바 진영의 추운 겨울과 스프링의 탄생**
	EJB			하이버네이트				JPA
		--등장-->			--자파표준-->

	EJB의 단점 어렵고 복잡하고 느림..

	2002년 로드 존슨 책 출간
	EJB의 문제점 지적
	EJB 없이도 충분히 고품질의 확장 가능한 애플리케이션을 개발할 수 있음을 보여줌
	30,000줄의 코드
	지금의 스프링 핵심 개념과 기반 코드들이 들어가있음
	BeanFactory, ApplicationContext, POJO, 제어의 역전, 의존관계 주입
	책이 유명해지고, 개발자들이 책의 예제 코드를 프로젝트에 사용함. 
	책 출간 직후 유겐휠러, 얀 카로프가 로드존슨에게 오픈소스 프로젝트를 제안
	스프링의 핵심 코드의 상당수는 유겐휠러가 지금도 개발
	스프링의 이름은 전통적인 EJB라는 겨울을 넘어 새로운 시작이라는 뜻으로 지음

**스프링이란?**
	스프링 프레임워크
	스프링 부트
	스프링 데이터
	스프링 세션
	스프링 시큐리티
	스프링 Rest Docs
	스프링 배치
	스프링 클라우드


	스프링 프레임워크
		- 핵심기술 : 스프링 DI 컨테이너, AOP, 이벤트, 기타
		- 웹 기술 : 스프링 MVC, 스프링 WebFlux
		- 데이터 접근 기술 : 트랜잭션, JDBC, ORM 지원, XML 지원
		- 기술 통합 : 캐시, 이메일, 원격접근, 스케줄링
		- 테스트 : 스프링 기반 테스트 지원
		- 언어 : 코틀린, 그루비
		최근에는 스프링 부트를 통해서 스프링 프레임워크의 기술들을 편리하게 사용
	
	
	스프링 부트
		- 스프링을 편리하게 사용할 수 있도록 지원, 최근에는 기본으로 사용
		- 단독으로 실행할 수 있는 스프링 애플리케이션을 쉽게 생성
		- Tomcat 같은 웹 서버를 내장해서 별도의 웹 서버를 설치하지 않아도 됨
		- 손쉬운 빌드 구성을 위한 starter 종속성 제공
		- 스프링과 3rd parth(외부) 라이브러리 자동 구성
		- 메트릭, 상태 확인, 외부 구성 같은 프로덕션 준비 기능
		- 관례에 의한 간결한 설정 
	
	스프링은 왜 만들었나요? 
		웹 애플리케이션 만들고, db 접근 편리하게 해주는 기술?
		전자정부 프레임워크?
		웹 서버도 자동으로 띄워주고?
		클라우드, 마이크로 서비스?
	
**좋은 객체 지향 프로그래밍이란?**


**좋은 객체 지향 설계의 5가지 원칙 (SOLID)**


**객체 지향 설계와 스프링**



